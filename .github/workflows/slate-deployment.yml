name: SLATE Deployment

on:
  workflow_call:
    inputs:
      email_changes:
        description: Whether or not to email changes to the maintainers.
        required: false
        default: true
        type: boolean
      mailgun_domain:
        description: The domain associated with the Mailgun service.
        required: false
        default: slateci.io
        type: string
      mailgun_from:
        description: The from value to use when sending emails.
        required: false
        default: "GitOps Notification <noreply@slateci.io>"
        type: string
      mailgun_send_to:
        description: The comma-delimited "send to" list to use when sending emails.
        required: false
        type: string
      mailgun_subject:
        description: The subject line to use when sending emails.
        required: false
        default: "SLATE GitOps Change Summary"
        type: string
      slate_api_endpoint:
        description: The SLATE API endpoint.
        required: false
        default: "https://api.slateci.io"
        type: string
      python_version:
        description: The version of Python to use, e.g. 3.9.
        required: false
        default: 3.9
        type: string

    secrets:
      mailgun_api_key:
        description: The API key used to send email via the Mailgun service.
        required: false

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04

    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: .

      - name: YAML Lint
        uses: ibiqlik/action-yamllint@v3
        with:
          config_data: |
            extends: default
            rules:
              line-length:
                level: warning
          file_or_dir: ./*/values.yaml ./*/instance.yaml

  deploy:
    name: Deploy SLATE Instance
    runs-on: ubuntu-20.04
    needs: lint

    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          path: ./checkout

      - name: Configure Git
        working-directory: ./checkout
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install Python packages
        uses: BSFishy/pip-action@v1
        with:
          packages: |
            jinja2
            requests

      - name: Download workflow scripts
        run: |-
          curl -fsSL https://raw.githubusercontent.com/slateci/github-actions/feature/6_add-slate-instance-gitops/scripts/generate-mail-body.py -o generate-mail-body.py
          curl -fsSL https://raw.githubusercontent.com/slateci/github-actions/feature/6_add-slate-instance-gitops/scripts/mailgun.py -o mailgun.py
          curl -fsSL https://raw.githubusercontent.com/slateci/github-actions/feature/6_add-slate-instance-gitops/scripts/slate-instance-push-updates.py -o slate-instance-push-updates.py

      - id: deploy
        name: Deploy to SLATE
        working-directory: ./checkout
        run: |-
          BEFORE="${{ github.event.before }}"
          AFTER="${{ github.event.after }}"
          # https://stackoverflow.com/questions/40883798/how-to-get-git-diff-of-the-first-commit
          # Use the empty tree id in Git if necessary
          if [[ $BEFORE = "0000000000000000000000000000000000000000" ]]; then
            BEFORE="4b825dc642cb6eb9a060e54bf8d69288fbee4904"
          fi
          if [[ $AFTER = "0000000000000000000000000000000000000000" ]]; then
            AFTER="4b825dc642cb6eb9a060e54bf8d69288fbee4904"
          fi
          git diff --name-status --pretty="format:" "$BEFORE" "$AFTER" > ../.changed
          echo "::set-output name=DIFF_OUTPUT::$(git diff "$BEFORE" "$AFTER")"
          python ../slate-instance-push-updates.py "../.changed" "${{ secrets.SLATE_API_TOKEN }}" "$ {{ inputs.slate_api_endpoint }}"

      - name: Commit SLATE Instance ID
        if: ${{ steps.deploy.outputs.push == 'true' }}
        working-directory: ./checkout
        run: |-
          git add .
          git commit -m "append new SLATE instance ID" --allow-empty
          git push

      - name: Email Changes
        if: ${{ steps.deploy.outputs.push == 'true' && inputs.email_changes }}
        env:
          GITHUB_API_COMMIT_ENDPOINT: "${{ github.api_url }}/repos/${{ github.repository }}/commits"
          MAILGUN_SUBJECT: "${{ inputs.mailgun_subject }}"
          MAILGUN_API_KEY: "${{ secrets.mailgun_api_key }}"
          MAILGUN_DOMAIN: "${{ inputs.mailgun_domain }}"
          MAILGUN_FROM: "${{ inputs.mailgun_from }}"
          MAILGUN_SEND_TO: "${{ inputs.mailgun_send_to }}"
        run: |-
          mkdir -p ./templates
          curl -fsSL https://raw.githubusercontent.com/slateci/github-actions/feature/6_add-slate-instance-gitops/templates/email_template_html.jinja -o ./templates/email_template_html.j2
          curl -fsSL https://raw.githubusercontent.com/slateci/github-actions/feature/6_add-slate-instance-gitops/templates/email_template_text.jinja -o ./templates/email_template_text.j2
          python generate_mail_body.py ${{ github.event.after }}
          python mailgun.py
