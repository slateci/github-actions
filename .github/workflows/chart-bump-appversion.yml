name: Chart Bump appVersion

on:
  workflow_call:
    inputs:
      helm_release_namespace:
        description: Kubernetes namespace corresponding to a Helm release, e.g. 'development', 'staging'.
        required: true
        type: string
      helm_release_prefix:
        description: The prefix used for the Helm release, e.g. 'slate-portal', 'slate-api'.
        required: true
        type: string
      python_version:
        description: The version of Python to use, e.g. 3.9.
        required: false
        default: 3.9
        type: string

    secrets:
      gc_compute_zone:
        description: The Google Cloud Compute Zone where the assets reside.
        required: true
      gc_gke_cluster:
        description: The cluster name on the Google Kubernetes Engine (GKE).
        required: true
      gc_service_account:
        description: The Google Cloud Service Account tied to the WIP.
        required: true
      gc_workload_identity_provider:
        description: The Google Cloud Workload Identity Provider (WIP).
        required: true

env:
  SLATE_GITHUB_ACTIONS_BRANCH: master
  SLATE_GITHUB_ACTIONS_RAWCONTENT_URL: https://raw.githubusercontent.com/slateci/github-actions

jobs:
  bump-appversion:
    name: Bump appVersion
    runs-on: ubuntu-20.04

    permissions:
      contents: read
      id-token: write

    steps:
      - name: "Chosen environment: development"
        if: ${{ inputs.helm_release_namespace == 'development' }}
        run: |-
          echo "GIT_REF=refs/heads/develop" >> $GITHUB_ENV
          echo "HELM_RELEASE_NAMESPACE_SHORTHAND=dev" >> $GITHUB_ENV

      - name: "Chosen environment: staging"
        if: ${{ inputs.helm_release_namespace == 'staging' }}
        run: |-
          echo "GIT_REF=refs/heads/master" >> $GITHUB_ENV
          echo "HELM_RELEASE_NAMESPACE_SHORTHAND=staging" >> $GITHUB_ENV

      - name: "Chosen environment: production"
        if: ${{ inputs.helm_release_namespace == 'production' }}
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            error("This workflow is not appropriate for the production environment.")

      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: .
          ref: ${{ env.GIT_REF }}

      - name: Set Up Tools
        uses: slateci/github-actions/.github/actions/gcloud-helm-setup@master
        with:
          cluster_name: ${{ secrets.gc_gke_cluster }}
          location: ${{ secrets.gc_compute_zone }}
          service_account: ${{ secrets.gc_service_account }}
          workload_identity_provider: ${{ secrets.gc_workload_identity_provider }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install Python packages
        uses: BSFishy/pip-action@v1
        with:
          packages: |
            pyyaml==6.0
            semver==2.13.0

      - name: Find Release Version
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import yaml
            
            with open("Chart.yaml") as stream:
              try:
                data_loaded = yaml.safe_load(stream)
              except yaml.YAMLError as ex:
                raise ex
              set_env("RELEASE_VERSION", data_loaded["appVersion"])

      - id: comparison
        name: Compare Deployed & Source Release Versions
        env:
          HELM_RELEASE_NAMESPACE: ${{ inputs.helm_release_namespace }}
          HELM_RELEASE_PREFIX: ${{ inputs.helm_release_prefix }}
        run: |-
          curl -fsSL ${{ env.SLATE_GITHUB_ACTIONS_RAWCONTENT_URL }}/${{ env.SLATE_GITHUB_ACTIONS_BRANCH }}/scripts/semver-health.py -o semver-health.py
          python semver-health.py

      - id: bump
        name: Bump Release Version
        if: ${{ inputs.helm_release_namespace != 'production' && comparison.outputs.ahead == 'false' }}
        env:
          HELM_RELEASE_NAMESPACE: ${{ inputs.helm_release_namespace }}
          HELM_RELEASE_PREFIX: ${{ inputs.helm_release_prefix }}
          PRERELEASE_DATETIME_SUFFIX: "%Y%m%d.%H%M%S"
        run: |-
          curl -fsSL ${{ env.SLATE_GITHUB_ACTIONS_RAWCONTENT_URL }}/${{ env.SLATE_GITHUB_ACTIONS_BRANCH }}/scripts/semver-health.py -o semver-health.py
          python semver-bump.py
          
      - name: Apply Release Version
        if: ${{ versions-comparison.outputs.ahead == 'false' }}
        run: |-
          sed -i 's/^appVersion:.*$/appVersion: "${{ bump.outputs.version }}"/g' Chart.yaml
          git add Chart.yaml
          git commit -m 'Increment appVersion: ${{ bump.outputs.version }}'
          git push
